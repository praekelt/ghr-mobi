[buildout]
app-name = app
#index = http://e.pypi.python.org/simple
user = www-data
group = www-data
server-name = ${buildout:app-name}.unomena.com
server-names = ${buildout:app-name}.dev.unomena.net ${buildout:app-name}.qa.unomena.net
http-port = 80
https-port = 443
frontend-proxy-host = 127.0.0.1
frontend-proxy-port = 11058
database-name = ${buildout:app-name}
nginx_conf_file = nginx.conf.in
apache_conf_file = apache.conf.in
backup-directory = /var/backups
media-root = ${buildout:directory}/media
static-root = ${buildout:directory}/static

versions = versions
newest = false
develop = .
find-links = 
	http://ftp.edgewall.com/pub/genshi/Genshi-0.7-py2.7-linux-x86_64.egg
	https://pypi.python.org/packages/2.7/d/django-preferences/django_preferences-0.0.6-py2.7.egg
    http://packages.unomena.net/python_dateutil-2.1-py2.7.egg

parts=
    tunobase
	django
	supervisor-gunicorn
	nginx
	supervisor-celeryd
	ssl
	backup
	ln
	mkdir

eggs = 
    ${buildout:app-name}

[versions]
django = 1.6
djangorecipe = 1.6

[tunobase]
recipe = zerokspot.recipe.git
as_egg = True
repository = git@git.unomena.net:unomena/tunobase.git
rev = 0.0.1.beta

[django]
recipe = djangorecipe
projectegg = project
settings = settings
eggs = ${buildout:eggs}

[supervisor-gunicorn]
recipe = collective.recipe.template
input = ${buildout:directory}/buildout_templates/supervisor.gunicorn.in
output = ${buildout:directory}/supervisor/gunicorn.conf
name = ${buildout:server-name}
control-script = django
host = ${buildout:frontend-proxy-host}
port = ${buildout:frontend-proxy-port}
user = ${buildout:user}
workers = 2
max-requests = 10000
log=${buildout:directory}/logs/process.log
supervisor-log=${buildout:directory}/logs/supervisor.process.log

[nginx]
recipe = collective.recipe.template[genshi]:genshi
input = buildout_templates/${buildout:nginx_conf_file}
output = ${buildout:directory}/nginx/${buildout:server-name}.conf
server_name = ${buildout:server-name}
server_names = ${buildout:server-names}
port = ${buildout:http-port}
ssl_port = ${buildout:https-port}
frontend_proxy_host = ${buildout:frontend-proxy-host}
frontend_proxy_port = ${buildout:frontend-proxy-port}
media_root = ${buildout:media-root}
static_root = ${buildout:static-root}
log_dir = ${buildout:directory}/logs
conf_dir = ${buildout:directory}/nginx
crt_dir = ${buildout:directory}/crt

[supervisor-celeryd]
recipe = collective.recipe.template
input = ${buildout:directory}/buildout_templates/supervisor.celeryd.in
output = ${buildout:directory}/supervisor/celeryd.conf
name = ${buildout:server-name}
control-script = django
user = ${buildout:user}
log=${buildout:directory}/logs/celeryd.log
supervisor-log=${buildout:directory}/logs/supervisor.celeryd.log
schedule=${buildout:directory}/scheduler/celerybeat-schedule

[ssl]
recipe = collective.recipe.template
input = buildout_templates/ssl.in
output = ${buildout:directory}/bin/make_cert.sh
server_name = ${buildout:server-name}
crt_dir = ${buildout:directory}/crt

[backup]
recipe = collective.recipe.template
input = ${buildout:directory}/buildout_templates/backup.sh.in
output = ${buildout:directory}/bin/backup.sh

[ln]
recipe = svetlyak40wt.recipe.symlinks
path = ${buildout:static-root}
files = django://django/contrib/admin/static/admin
        ${buildout:directory}/src/${buildout:app-name}/static/${buildout:app-name}
        django-ckeditor://ckeditor/static/ckeditor

[mkdir]
recipe = z3c.recipe.mkdir
paths = ${buildout:directory}/logs
        ${buildout:directory}/scheduler
        ${buildout:directory}/crt
        ${buildout:directory}/media
        ${buildout:directory}/media/uploads